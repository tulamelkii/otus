1)Create virtual machines
**************************************vagrant file***************************************

MACHINES = {
:inetRouter => {
        :box_name => "debian/bullseye64",
        :vm_name => "inetRouter",
        :net => [
                   {ip: '192.168.255.13', adapter: 2, netmask: '255.255.255.252', virtualbox__intnet: "centr-net"}, 
                   {ip:'192.168.56.10', adapter:3, netmask: '255.255.255.0'},         
                ]
  },

:centRouter => {
        :box_name => "debian/bullseye64",
        :vm_name => "centRouter",
        :net => [
                   {ip: '192.168.255.14', adapter: 2, netmask: '255.255.255.252', virtualbox__intnet: "centr-net"},
                   {ip: '192.168.2.5', adapter: 3, netmask: '255.255.255.252', virtualbox__intnet: "inet-router"},
                   {ip: '192.168.3.5', adapter: 4, netmask: '255.255.255.252', virtualbox__intnet: "inet-server"},
                 
                   {ip: '192.168.56.11', adapter: 5,  netmask: '255.255.255.0'},
                ]
},

:inetRouter2 => {
        :box_name => "debian/bullseye64",
        :vm_name => "inetRouter2",
        :net => [
                   {ip: '192.168.2.6', adapter: 2, netmask: '255.255.255.252', virtualbox__intnet: "inet-router"}, 
                   {ip:'192.168.56.12', adapter: 3, netmask: '255.255.255.0'},         
                ]
  },

 :inetServer => {
        :box_name => "debian/bullseye64",
        :vm_name => "inetServer",
        :net => [
                   {ip: '192.168.3.6', adapter: 2, netmask: '255.255.255.252', virtualbox__intnet: "inet-server"}, 
                   {ip:'192.168.56.13', adapter: 3, netmask: '255.255.255.0'},         
                ]
  },
 
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    
    config.vm.define boxname do |box|
   
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
      boxconfig[:net].each do |ipconf|
      box.vm.network "private_network", ip: ipconf[:ip], virtualbox__intnet: ipconf[:virtualbox__intnet], netmask: ipconf[:netmask], adapter: ipconf[:adapter]
      end
  
 if boxconfig[:vm_name] == "inetServer"
       box.vm.provision "ansible" do |ansible|
        ansible.playbook = "main.yml"
        ansible.inventory_path = "host"
        ansible.host_key_checking = "false"
        ansible.limit = "all"
       end
end
end
end
end

2) Create forrwardibg for all Vm
 - name: enable forwarding  
      sysctl:
        name: net.ipv4.conf.all.forwarding
        value: '1'
        state: present  

3) Create routing for all machines
3.1)delete default rout for all vm
****************************************
post-up ip route del default dev eth0
****************************************
3.2) change network preference all vm and add route  /etc/network/interface

- name: setup block inetRouter
      block:
        - name: setup template iptabels inetRouter 
          template:
            src: Rout/inetRouter.j2
            dest: /etc/network/interfaces
            owner: root
            group: root
            mode: 0644

- name: install to centRouter
      block:
        - name: setup route on CentRouter
          template:
            src: Rout/centRouter.j2
            dest: /etc/network/interfaces
            owner: root
            group: root
            mode: 0644

- name: preference inetRouter2
      block:
        - name: setup route on inetRouter2
          template:
            src: Rout/inetRouter2.j2
            dest: /etc/network/interfaces
            owner: root
            group: root
            mode: 0644

- name: preference inetServer
      block:
        - name: setup route on inetServer
          template:
            src: Rout/inetServer.j2
            dest: /etc/network/interfaces
            owner: root
            group: root
            mode: 0644

**********************exapmle Route************************
inetRouter
************************************************************
up ip route add 192.168.2.4/30 via 192.168.255.14 dev eth1
up ip route add 192.168.3.4/30 via 192.168.255.14 dev eth1 
************************************************************
centrouter
************************************************************
up ip route add 0.0.0.0/0 via 192.168.255.13 dev eth1
************************************************************
inetRouter2
************************************************************
up ip route add 0.0.0.0/0 via 192.168.2.5 dev eth1
***********************************************************
inetServer
**********************************************************
up ip route add 0.0.0.0/0 via 192.168.3.5 dev eth1
**********************************************************


4) Check network
4.1) Ping for all hosts(this is ok, ping allow for all hosts)
**********************************************************
vagrant@inetServer:~$ ping 192.168.255.13
PING 192.168.255.13 (192.168.255.13) 56(84) bytes of data.
64 bytes from 192.168.255.13: icmp_seq=1 ttl=63 time=1.89 ms
64 bytes from 192.168.255.13: icmp_seq=2 ttl=63 time=1.83 ms
64 bytes from 192.168.255.13: icmp_seq=3 ttl=63 time=1.88 ms
^Z
[2]+  Stopped                 ping 192.168.255.13
vagrant@inetServer:~$ ping 192.168.2.6
PING 192.168.2.6 (192.168.2.6) 56(84) bytes of data.
64 bytes from 192.168.2.6: icmp_seq=1 ttl=63 time=1.81 ms
64 bytes from 192.168.2.6: icmp_seq=2 ttl=63 time=1.46 ms
64 bytes from 192.168.2.6: icmp_seq=3 ttl=63 time=1.81 ms
64 bytes from 192.168.2.6: icmp_seq=4 ttl=63 time=2.01 ms
^Z
[3]+  Stopped                 ping 192.168.2.6
vagrant@inetServer:~$ ping 10.0.2.15
PING 10.0.2.15 (10.0.2.15) 56(84) bytes of data.
64 bytes from 10.0.2.15: icmp_seq=1 ttl=64 time=0.043 ms
64 bytes from 10.0.2.15: icmp_seq=2 ttl=64 time=0.067 ms
64 bytes from 10.0.2.15: icmp_seq=3 ttl=64 time=0.066 ms
^Z
[4]+  Stopped                 ping 10.0.2.15
vagrant@inetServer:~$ ping 192.168.3.5
PING 192.168.3.5 (192.168.3.5) 56(84) bytes of data.
64 bytes from 192.168.3.5: icmp_seq=1 ttl=64 time=0.907 ms
^Z
[5]+  Stopped                 ping 192.168.3.5
vagrant@inetServer:~$ ping 192.168.255.14
PING 192.168.255.14 (192.168.255.14) 56(84) bytes of data.
64 bytes from 192.168.255.14: icmp_seq=1 ttl=64 time=0.896 ms
64 bytes from 192.168.255.14: icmp_seq=2 ttl=64 time=0.983 ms
^Z
[6]+  Stopped                 ping 192.168.255.14
**************************************************************
4.Check routing all hosts. We see our rout go to right gateway.it's ok
*************************************************************
inetServer
vagrant@inetServer:~$ traceroute 8.8.8.8
traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets
 1  192.168.3.5 (192.168.3.5)  0.827 ms  0.722 ms  0.811 ms
 2  192.168.255.13 (192.168.255.13)  1.636 ms  1.958 ms  1.683 ms
 3  10.0.2.2 (10.0.2.2)  1.826 ms  1.626 ms  1.556 ms
 4  * * *
 5  * * *
 6  * * *
 7  81.200.9.150 (81.200.9.150)  4.825 ms  4.802 ms 142.250.173.146 (142.250.173.146)  4.727 ms
 8  * * *
 9  172.253.69.174 (172.253.69.174)  4.018 ms 108.170.250.129 (108.170.250.129)  5.032 ms  5.268 ms
10  108.170.250.113 (108.170.250.113)  7.322 ms 108.170.250.66 (108.170.250.66)  8.587 ms 108.170.250.51 (108.170.250.51)  4.317 ms
11  142.251.237.154 (142.251.237.154)  21.649 ms 172.253.66.116 (172.253.66.116)  22.869 ms 142.250.238.214 (142.250.238.214)  21.550 ms
12  142.251.237.146 (142.251.237.146)  22.593 ms 72.14.235.69 (72.14.235.69)  21.989 ms 142.250.235.62 (142.250.235.62)  21.714 ms
13  72.14.237.199 (72.14.237.199)  22.628 ms 209.85.246.111 (209.85.246.111)  24.475 ms 216.239.54.201 (216.239.54.201)  23.662 ms
14  * * *
15  * * *
16  * * *
17  * * *
18  * * *
19  * * *
20  * * *
21  * * *
22  * * *
23  * dns.google (8.8.8.8)  21.652 ms  21.394 ms
***************************************************************
inetRouter2
**************************************************************
traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets
 1  192.168.2.5 (192.168.2.5)  0.913 ms  0.757 ms  0.674 ms
 2  192.168.255.13 (192.168.255.13)  1.104 ms  1.371 ms  1.487 ms
 3  10.0.2.2 (10.0.2.2)  2.095 ms  1.905 ms  1.815 ms
 4  * * *
 5  * * *
 6  * * *
 7  81.200.9.150 (81.200.9.150)  4.621 ms 142.250.173.146 (142.250.173.146)  5.425 ms 81.200.9.150 (81.200.9.150)  5.325 ms
 8  * * *
 9  108.170.226.172 (108.170.226.172)  4.920 ms 108.170.250.33 (108.170.250.33)  5.428 ms  5.136 ms
10  108.170.250.130 (108.170.250.130)  4.622 ms 108.170.250.146 (108.170.250.146)  3.738 ms 108.170.250.130 (108.170.250.130)  4.671 ms
11  142.251.237.154 (142.251.237.154)  21.671 ms 142.251.238.82 (142.251.238.82)  22.223 ms 172.253.66.116 (172.253.66.116)  22.097 ms
12  216.239.43.20 (216.239.43.20)  21.125 ms 172.253.66.108 (172.253.66.108)  21.853 ms 74.125.253.109 (74.125.253.109)  21.197 ms
13  108.170.233.161 (108.170.233.161)  20.824 ms 172.253.64.57 (172.253.64.57)  23.482 ms 216.239.48.85 (216.239.48.85)  23.827 ms
14  * * *
15  * * *
16  * * *
17  * * *
18  * * *
19  * * *
20  * * *
21  * * *
22  * * *
23  dns.google (8.8.8.8)  22.072 ms *  21.861 ms

5) After we create file hosts for ansible
**************************************************************
[inetRouter]
inetRouter ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2222 ansible_private_key_file=/home/localadm/otus/.vagrant/machines/inetRouter/virtualbox/private_key
[centRouter]
centRouter ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2200 ansible_private_key_file=/home/localadm/otus/.vagrant/machines/centRouter/virtualbox/private_key
[inetRouter2]
inetRouter2 ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2201 ansible_private_key_file=/home/localadm/otus/.vagrant/machines/inetRouter2/virtualbox/private_key
[inetServer]
inetServer ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2202 ansible_private_key_file=/home/localadm/otus/.vagrant/machines/inetServer/virtualbox/private_key

[vm:children]
inetRouter2
centRouter
inetRouter
inetServer
***************************************************************
6) create folder ansible.cfg for allow ssh
***************************************************************
[defaults]
host_key_checking = false
***************************************************************

7) create main file for ansible main.yml
8)Install programs for all hosts

- name: install all hosts
   hosts: vm
   become: true
   tasks:
    - name: install update and program
      apt:
        update_cache: yes
        name: 
        - traceroute
        - iptables
        - iptables-persistent
        - conntrack
        - tcpdump
        - knockd
        - curl
        state: latest
************add Rulles for iptables inet router*******
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [26:2064]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT     #allow state RELATED,ESTABLISHED for frames
-A INPUT -i eth0 -p tcp -m conntrack --ctstate INVALID -j DROP    # drop diferen no valid frames
-A INPUT -i lo -p tcp -j ACCEPT                                   # allow loop acces
-A INPUT -p tcp -m multiport --dports 80,8080,53 -j ACCEPT        # allow 80,8080,53 ports
-A INPUT -p udp -j ACCEPT                                         # allow udp 
-A INPUT -p icmp -j ACCEPT                                        # allow icmp
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j ACCEPT               # allow 22 for vagrant and ansible 2 rules
-A INPUT -i eth2 -p tcp -m tcp --dport 22 -j ACCEPT               # allow 22
-A INPUT -i eth1 -p tcp -m tcp --dport 22 -j DROP
-A FORWARD -i eth0 -o eth1 -p tcp -j ACCEPT                       # forwaring frames( i don't use Masquerade)
-A FORWARD -i eth1 -o eth0 -p tcp -j ACCEPT
-A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT   # And this rulles for table output accept all and drop
-A OUTPUT -p tcp -m multiport --dports 80,8080,53 -j ACCEPT     
-A OUTPUT -o lo -j ACCEPT
-A OUTPUT -p udp -j ACCEPT
-A OUTPUT -p icmp -j ACCEPT
-A OUTPUT -j DROP
COMMIT
# Completed on Tue Oct  3 21:51:01 2023
# Generated by iptables-save v1.8.7 on Tue Oct  3 21:51:01 2023
*nat
:PREROUTING ACCEPT [17:1268]
:INPUT ACCEPT [1:44]
:OUTPUT ACCEPT [17:1300]
:POSTROUTING ACCEPT [33:2524]
-A POSTROUTING -o eth0 -j SNAT --to-source 10.0.2.15       #this is rules change my ip in table -t nat in POSTROUTING and send from the local network new ip 10.0.2.15
COMMIT


********************Knockd*****************************
9)This is step: i created knockd server and configured
 i have a problem for default preference knockd.service
 When, started vm service dead and knockd dont work
 first i nstall knock and enabled 
9.1)
 - name: enable knockd
          lineinfile:
            path: /etc/default/knockd
            regexp: 'START_KNOCKD'
            line: 'START_KNOCKD=1'
9.2)Show when knock servce will be work

- name: enable int knockd
          lineinfile:
            path: /etc/default/knockd
            regexp: '#KNOCKD_OPTS'
            line: 'KNOCKD_OPTS="-i eth1"'

9.3) change config knock service .
this is config started if i knock to vm on the 7000,3000,9000 port,and add allow rules for iptables- open ssh 

        - name: configured knockd
          template:
            src: Knockd/knockd_conf.j2
            dest: /etc/knockd.conf
            owner: root
            group: root
            mode: 0755
*************conf knock********************************
[options]
        logfile = /var/log/knockd.log
        interface = eth1
[openSSH]
        sequence = 7000,3000,9000
        seq_timeout = 10   #time open ports
        tcpflags = syn   
        Start_command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT # add rules open 22 port 
        cmd_timeout= 10
        Stop_command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT
*****************************************************
9.4 Change conf service for knock. 
add Requires=network.target 
and WantedBy=multi-user.target
And people write this bag,if service autoreboot dead
***************************************************
[Unit]
Description=Port-Knock Daemon
After=network.target
Requires=network.target
Documentation=man:knockd(1)

[Service]
EnvironmentFile=-/etc/default/knockd
ExecStartPre=/bin/sleep 1
ExecStart=/usr/sbin/knockd $KNOCKD_OPTS
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
SuccessExitStatus=0 2 15
ProtectSystem=full
CapabilityBoundingSet=CAP_NET_RAW CAP_NET_ADMIN

[Install]
WantedBy=multi-user.target
***************************************************
Check service -its ok

● knockd.service - Port-Knock Daemon
     Loaded: loaded (/lib/systemd/system/knockd.service; enabled; vendor preset: enabled)
     Active: active (running) since Sat 2023-10-07 10:20:50 UTC; 3h 27min ago
       Docs: man:knockd(1)
    Process: 389 ExecStartPre=/bin/sleep 1 (code=exited, status=0/SUCCESS)
   Main PID: 400 (knockd)
      Tasks: 1 (limit: 510)
     Memory: 780.0K
        CPU: 8ms
     CGroup: /system.slice/knockd.service
             └─400 /usr/sbin/knockd -i eth1

Warning: some journal files were not opened due to insufficient permissions
9.5) Restart vm

9.6) I generated key for centRout vm and copy this key
 - name: Generate an ssh-keygen
          become: yes
          openssh_keypair:
            path: /root/.ssh/id_rsa
            owner: root
            group: root

        - name: Copy id_rsa to main vm
          fetch:
            src: /root/.ssh/id_rsa.pub
            dest: "{{ inventory_hostname }}_id_rsa.pub"
            flat: yes 
    
        - name: Copy to InetRouter
          copy:
            src: "{{ inventory_hostname }}_id_rsa.pub"
            dest: /root/.ssh/authorized_keys
            mode: '0600'
          delegate_to: inetRouter
9.7) Create my script on the centralRouter
***************************************************
- name: script knock
          template:
            src: Knockd/script.sh 
            dest: /root/
            owner: root
            group: root
            mode: 0777
*************************************************

9.8) this is script knock to remoute server and open port 22 for InetRouter check

#!/bin/bash
knock -v 192.168.255.13 7000 3000 9000
ssh 192.168.255.13
expect yes 

9.9)
********************check**********************
root@centRouter:~# nmap 192.168.255.13
Starting Nmap 7.80 ( https://nmap.org ) at 2023-10-07 14:18 UTC
Nmap scan report for 192.168.255.13
Host is up (0.0010s latency).
Not shown: 999 closed ports                                       
PORT   STATE    SERVICE
22/tcp filtered ssh                                         #port closed firewall
MAC Address: 08:00:27:7F:2D:6E (Oracle VirtualBox virtual NIC)

Nmap done: 1 IP address (1 host up) scanned in 1.40 seconds
root@centRouter:~# ssh 192.168.255.13                       # Not connected
^Z
[1]+  Stopped                 ssh 192.168.255.13
root@centRouter:~# ./
.ansible_async/ .ssh/           script.sh                  # use script
root@centRouter:~# ./script.sh                             # and he knock 7000 3000 9000 ports
hitting tcp 192.168.255.13:7000
hitting tcp 192.168.255.13:3000
hitting tcp 192.168.255.13:9000
The authenticity of host '192.168.255.13 (192.168.255.13)' can't be established.
ECDSA key fingerprint is SHA256:GYnG8tsOmmGY/cbYAaSMOX0yJhFlAu+vHiuQy9dWnwc.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '192.168.255.13' (ECDSA) to the list of known hosts.
Linux inetRouter 5.10.0-22-amd64 #1 SMP Debian 5.10.178-3 (2023-04-22) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
root@inetRouter:~#                                        #And we connected!
**********************************************
Knock work
*************************conf nginx******************
10) Install nginx and change default port 80 to 8080
 - name: install nginx
          apt:
            name: nginx
            state: latest

    
        - name: edit nginx listen port
          template:
            src: Temp_nginx/nginx.j2
            dest: /etc/nginx/sites-enabled/default 
       
        - name: service nginx
          service:
            name: nginx
            state: restarted

examle change port 80 to 8080 /etc/nginx/sites-enabled/default
******************************************************
# Default server configuration
#
server {
     listen 8080 default_server;
     listen [::]:8080 default_server;
11) see status nginx and look listen port 8080 (it's ok nginx listen)

● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)
     Active: active (running) since Sat 2023-10-07 12:19:24 UTC; 2h 11min ago
       Docs: man:nginx(8)
    Process: 674 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, stat>
    Process: 675 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCC>
   Main PID: 677 (nginx)
      Tasks: 3 (limit: 510)
     Memory: 3.2M
        CPU: 38ms
     CGroup: /system.slice/nginx.service
             ├─677 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
             ├─678 nginx: worker process
             └─679 nginx: worker process

vagrant@inetServer:~$ ss -tuln
Netid    State     Recv-Q     Send-Q         Local Address:Port         Peer Address:Port    Process    
udp      UNCONN    0          0                  127.0.0.1:323               0.0.0.0:*                  
udp      UNCONN    0          0                      [::1]:323                  [::]:*                  
tcp      LISTEN    0          511                  0.0.0.0:8080              0.0.0.0:*           # ok        
tcp      LISTEN    0          128                  0.0.0.0:22                0.0.0.0:*                  
tcp      LISTEN    0          511                     [::]:8080                 [::]:*                  
tcp      LISTEN    0          128                     [::]:22                   [::]:*     

*************************change iptables rules for inetRouter2*******************************
create iptables rules

:INPUT ACCEPT [4090:231284]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [2252:172736]
-A FORWARD -i eth0 -o eth1 -p tcp -j ACCEPT   
-A FORWARD -i eth1 -o eth0 -p tcp -j ACCEPT
COMMIT
# Completed on Fri Oct  6 22:26:13 2023
# Generated by iptables-save v1.8.7 on Fri Oct  6 22:26:13 2023
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A PREROUTING -i eth2 -p tcp -m tcp --dport 80 -j DNAT --to-destination 192.168.3.6:8080  #Destination nat-this rules forwarding all packages (interface 2 forward to ip  192.168.3.6:8080 inetServer)
-A POSTROUTING -s 192.168.56.0/24 -d 0/0 -j MASQUERADE # Enable MASQUERADE
COMMIT
# Completed on Fri Oct  6 22:26:13 2023
************************check web site*****************************************************
this is my vm /Check Web
localadm@DEB:~/otus$ curl 192.168.56.12
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="v" content="width=device-width, initial-scale=1.0">
  <title>Welcome Otus</title>
  <style>
    body {
      margin: 0;
      box-sizing: border-box;
    }

    .container {
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      background: linear-gradient(to right, rgba(0, 0, 0, .5), rgba(0, 0, 0, .1)), url('https://images.unsplash.com/photo-1595624871930-6e8537998592?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80');
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
    }

    h1 {
      font-size: 10rem;
      color: #fff;
      text-transform: uppercase;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    h2 {
      font-size: 2rem;
      color: #fff;
      text-transform: uppercase;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    p {
      font-size: 1.5rem;
      color: #fff;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    a {
      padding: 15px 20px;
      background: #52caee;
      font-size: 1rem;
      text-decoration: none;
      color: #333333;
      border-radius: .25rem;
      box-shadow: 0 0 20px rgba(255, 255, 255, 0.808)
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Hi Otus</h1>
    <h2>This is stend Iptables</h2>
 </div>
</body>

</html>











