This is stend have 2 virtual machines
Firsrt is Server and second is Client
First step create Vagrant file:
***************************************************************
# vim: set ft=ruby

MACHINES = {
:Server => {
        :box_name => "debian/bullseye64",
        :vm_name => "Server",
        :net => [
                   {ip: '192.168.20.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "net2"},
                   {ip: '192.168.56.10', adapter: 3},
       
        ]
  },

:Client => {
        :box_name => "debian/bullseye64",
        :vm_name => "Client",
        :net => [
                   {ip: '192.168.20.3', adapter: 2 , netmask: "255.255.255.0", virtualbox__intnet: "net2"},
                   {ip: '192.168.56.11', adapter: 3},

                ]
},

}
Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    
    config.vm.define boxname do |box|
   
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
      boxconfig[:net].each do |ipconf|
      box.vm.network "private_network", ip: ipconf[:ip], virtualbox__intnet: ipconf[:virtualbox__intnet], netmask: ipconf[:netmask], adapter: ipconf[:adapter]
      end
       box.vm.provider :virtualbox do |v|
        v.customize ['modifyvm', :id, '--nested-hw-virt', 'on']
      end

  
 if boxconfig[:vm_name] == "Client"
       box.vm.provision "ansible" do |ansible|
        ansible.playbook = "main.yml"
        ansible.inventory_path = "host"
        ansible.host_key_checking = "false"
        ansible.limit = "all"
       end
    end
   end
  end
end
***************************************************************************
2)After create file host
[Server]
Server ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2222 ansible_private_key_file=/home/localadm/otus/.vagrant/machines/Server/virtualbox/private_key
[Client]
Client ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2200 ansible_private_key_file=/home/localadm/otus/.vagrant/machines/Client/virtualbox/private_key

[vm:children]
Server
Client
*******************************************************************************
3) Next step create Ansible-playbok and install programs openvpn and iperf3
   
    - name: install update and program
      apt:
        update_cache: yes
        name:
        - openvpn
        - iperf3
        state: latest
********************************************************************************
4)Generated key for openvpn
 
        - name: generate key openvpn
          shell: openvpn --genkey secret /etc/openvpn/static.key

*******************************************************************************
5)Create template:
This is template launches tun or tap vpn
I created conditions if you choose tun or tap, you mast change file vars
tap: false
tun: true
****************************************************************************
{% if ansible_hostname == 'Server' and tap  == true %}  # if host Server then enable preference for config openvpn tap
dev tap
ifconfig 10.10.10.1 255.255.255.0    #Created virtual subnet 10.10.10.`
topology subnet
secret /etc/openvpn/static.key       # path secret key
comp-lzo                             #use LZO compression on the VPN tunnel 
status /var/log/openvpn-status.log   
log /var/log/openvpn.log             # path logs 
verb 3
*****************************************************************************
{% elif ansible_hostname == 'Client' and tap == true %} #if this Clent choose preference for clinet
dev tap
remote 192.168.56.10                                    # remote host server             
ifconfig 10.10.10.2 255.255.255.0                       # ip client for virtual subnet
topology subnet
route 192.168.56.0 255.255.255.0                            
secret /etc/openvpn/static.key                      
comp-lzo
status /var/log/openvpn-status.log
log /var/log/openvpn.log
verb 3
{% endif %}
******************************************************************************
{% if ansible_hostname == 'Server' and tun  == true %}    # this is preferece tun for server and client but we use tun preference 
dev tun
ifconfig 10.10.10.1 255.255.255.0
topology subnet
secret /etc/openvpn/static.key
comp-lzo
status /var/log/openvpn-status.log
log /var/log/openvpn.log
verb 3
{% elif ansible_hostname == 'Client' and tun == true %}
dev tun
remote 192.168.56.10
ifconfig 10.10.10.2 255.255.255.0
topology subnet
route 192.168.56.0 255.255.255.0
secret /etc/openvpn/static.key
comp-lzo
status /var/log/openvpn-status.log
log /var/log/openvpn.log
verb 3
{% endif %}
********************************************************************************
6)created service template service openvpn
[Unit]
Description=OpenVPN Tunneling Application On %I
After=network.target

[Service]
Type=notify
PrivateTmp=true
ExecStart=/usr/sbin/openvpn --cd /etc/openvpn/ --config %i.conf

[Install]
WantedBy=multi-user.target
*******************************************************************************
‚óè openvpn.service - OpenVPN service
     Loaded: loaded (/lib/systemd/system/openvpn.service; enabled; vendor preset: enabled)
     Active: active (exited) since Sun 2023-10-15 17:47:48 UTC; 3h 18min ago
    Process: 374 ExecStart=/bin/true (code=exited, status=0/SUCCESS)
   Main PID: 374 (code=exited, status=0/SUCCESS)
        CPU: 1ms
*********************************************************************************
7) Create service and enabled. I add tags if i choose tun or tap i choose tags       
        - name: create template service
          template:
            src: serv_pref/service.j2
            dest: /etc/systemd/system/openvpn@.service

        - name: start service
          service:
            name: openvpn@server.service
            state: started
            enabled: true
          tags: 
            - rest_vpn
**********************************************************************************
8)Next step copy secret key for local host machine and copy to client

    - name: copy generate key for local machine
      fetch:
        src: /etc/openvpn/static.key
        dest: "serv_pref/static.key"
        flat: yes
   
    - name: Copy to Client
      block:
        - name:
          copy:
            src: serv_pref/static.key
            dest:  /etc/openvpn/static.key
            mode: '0600'
          delegate_to: Client
      when: (ansible_hostname == "Server")

*******************************************************************************
9)if i want change preference i choose true tap or tun and restart service for tags

localadm@DEB:~/otus$ ansible-playbook -i host main.yml -t rest_vpn
[WARNING]: Found both group and host with same name: Client
[WARNING]: Found both group and host with same name: Server

PLAY [install all hosts] *******************************************************************************

TASK [Gathering Facts] *********************************************************************************
ok: [Client]
ok: [Server]

TASK [create template] *********************************************************************************
skipping: [Client]
ok: [Server]

TASK [start service] ***********************************************************************************
skipping: [Client]
ok: [Server]

TASK [create file serv.conf for client] ****************************************************************
skipping: [Server]
ok: [Client]

PLAY RECAP *********************************************************************************************
Client                     : ok=2    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
Server                     : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

*********************************************************************************
10)check how to work tap and i start for server iperf and lisen

vagrant@Server:~$ -----------------------------------------------------------
Server listening on 5201
-----------------------------------------------------------

11) going to client and run iperf 
vagrant@Client:~$ iperf3 -c 10.10.10.1 -t 40 -i 5
Connecting to host 10.10.10.1, port 5201
[  5] local 10.10.10.2 port 52142 connected to 10.10.10.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-5.00   sec  97.3 MBytes   163 Mbits/sec   55   1.22 MBytes       
[  5]   5.00-10.00  sec  95.9 MBytes   161 Mbits/sec  182    302 KBytes       
[  5]  10.00-15.00  sec  93.3 MBytes   157 Mbits/sec    0    472 KBytes       
[  5]  15.00-20.00  sec  96.7 MBytes   162 Mbits/sec   22    485 KBytes       
[  5]  20.00-25.00  sec  97.9 MBytes   164 Mbits/sec   53    506 KBytes       
[  5]  25.00-30.00  sec  96.7 MBytes   162 Mbits/sec   43    356 KBytes       
[  5]  30.00-35.00  sec  96.7 MBytes   162 Mbits/sec    0    512 KBytes       
[  5]  35.00-40.00  sec  96.7 MBytes   162 Mbits/sec    0    632 KBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-40.00  sec   771 MBytes   162 Mbits/sec  355             sender
[  5]   0.00-40.04  sec   769 MBytes   161 Mbits/sec                  receiver

12)watch to server

Accepted connection from 10.10.10.2, port 47126
[  5] local 10.10.10.1 port 5201 connected to 10.10.10.2 port 47140
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-1.00   sec  17.8 MBytes   150 Mbits/sec                  
[  5]   1.00-2.00   sec  18.8 MBytes   158 Mbits/sec                  
[  5]   2.00-3.00   sec  19.0 MBytes   159 Mbits/sec                  
[  5]   3.00-4.00   sec  18.7 MBytes   157 Mbits/sec                  
[  5]   4.00-5.00   sec  19.7 MBytes   166 Mbits/sec                  
[  5]   5.00-6.00   sec  19.6 MBytes   164 Mbits/sec                  
[  5]   6.00-7.00   sec  19.3 MBytes   162 Mbits/sec                  
[  5]   7.00-8.00   sec  19.4 MBytes   163 Mbits/sec                  
[  5]   8.00-9.00   sec  19.1 MBytes   161 Mbits/sec                  
[  5]   9.00-10.00  sec  18.9 MBytes   158 Mbits/sec                  
[  5]  10.00-11.00  sec  19.1 MBytes   160 Mbits/sec                  
[  5]  11.00-12.00  sec  19.8 MBytes   166 Mbits/sec                  
[  5]  12.00-13.00  sec  19.5 MBytes   164 Mbits/sec                  
[  5]  13.00-14.00  sec  19.6 MBytes   164 Mbits/sec                  
[  5]  14.00-15.00  sec  19.3 MBytes   162 Mbits/sec                  
[  5]  15.00-16.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  16.00-17.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  17.00-18.00  sec  19.1 MBytes   160 Mbits/sec                  
[  5]  18.00-19.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  19.00-20.00  sec  19.1 MBytes   160 Mbits/sec                  
[  5]  20.00-21.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  21.00-22.00  sec  19.3 MBytes   162 Mbits/sec                  
[  5]  22.00-23.00  sec  19.0 MBytes   160 Mbits/sec                  
[  5]  23.00-24.00  sec  19.4 MBytes   163 Mbits/sec                  
[  5]  24.00-25.00  sec  19.4 MBytes   163 Mbits/sec                  
[  5]  25.00-26.00  sec  19.6 MBytes   165 Mbits/sec                  
[  5]  26.00-27.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  27.00-28.00  sec  20.0 MBytes   167 Mbits/sec                  
[  5]  28.00-29.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  29.00-30.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  30.00-31.00  sec  19.7 MBytes   166 Mbits/sec                  
[  5]  31.00-32.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  32.00-33.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  33.00-34.00  sec  18.7 MBytes   156 Mbits/sec                  
[  5]  34.00-35.00  sec  18.8 MBytes   158 Mbits/sec                  
[  5]  35.00-36.00  sec  19.4 MBytes   163 Mbits/sec                  
[  5]  36.00-37.00  sec  18.7 MBytes   156 Mbits/sec                  
[  5]  37.00-38.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  38.00-39.00  sec  17.9 MBytes   150 Mbits/sec                  
[  5]  39.00-40.00  sec  18.7 MBytes   157 Mbits/sec                  
[  5]  40.00-40.04  sec   795 KBytes   157 Mbits/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-40.04  sec   769 MBytes   161 Mbits/sec                  receiver
-----------------------------------------------------------
Server listening on 5201
-----------------------------------------------------------
13)Change preference and enabled tun and wath to client
 
vagrant@Client:~$ iperf3 -c 10.10.10.1 -t 40 -i 5
Connecting to host 10.10.10.1, port 5201
[  5] local 10.10.10.2 port 39482 connected to 10.10.10.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-5.00   sec  98.7 MBytes   166 Mbits/sec   59    539 KBytes       
[  5]   5.00-10.00  sec  96.9 MBytes   162 Mbits/sec   66    348 KBytes       
[  5]  10.00-15.00  sec  98.0 MBytes   164 Mbits/sec   15    437 KBytes       
[  5]  15.00-20.00  sec  99.0 MBytes   166 Mbits/sec    0    575 KBytes       
[  5]  20.00-25.00  sec  94.8 MBytes   159 Mbits/sec   66    388 KBytes       
[  5]  25.00-30.00  sec  97.8 MBytes   164 Mbits/sec    0    535 KBytes       
[  5]  30.00-35.00  sec  98.9 MBytes   166 Mbits/sec    0    653 KBytes       
[  5]  35.00-40.00  sec   100 MBytes   168 Mbits/sec    0    921 KBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-40.00  sec   784 MBytes   164 Mbits/sec  206             sender
[  5]   0.00-40.08  sec   783 MBytes   164 Mbits/sec                  receiver

iperf Done.

14)Watch to server

vagrant@Server:~$ Accepted connection from 10.10.10.2, port 39466
[  5] local 10.10.10.1 port 5201 connected to 10.10.10.2 port 39482
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-1.00   sec  18.3 MBytes   153 Mbits/sec                  
[  5]   1.00-2.00   sec  19.8 MBytes   166 Mbits/sec                  
[  5]   2.00-3.00   sec  19.3 MBytes   162 Mbits/sec                  
[  5]   3.00-4.00   sec  19.3 MBytes   161 Mbits/sec                  
[  5]   4.00-5.00   sec  19.2 MBytes   161 Mbits/sec                  
[  5]   5.00-6.00   sec  19.4 MBytes   163 Mbits/sec                  
[  5]   6.00-7.00   sec  19.2 MBytes   161 Mbits/sec                  
[  5]   7.00-8.00   sec  19.3 MBytes   162 Mbits/sec                  
[  5]   8.00-9.00   sec  19.5 MBytes   164 Mbits/sec                  
[  5]   9.00-10.00  sec  19.2 MBytes   161 Mbits/sec                  
[  5]  10.00-11.00  sec  19.9 MBytes   167 Mbits/sec                  
[  5]  11.00-12.00  sec  19.4 MBytes   163 Mbits/sec                  
[  5]  12.00-13.00  sec  19.5 MBytes   164 Mbits/sec                  
[  5]  13.00-14.00  sec  19.6 MBytes   165 Mbits/sec                  
[  5]  14.00-15.00  sec  19.5 MBytes   163 Mbits/sec                  
[  5]  15.00-16.00  sec  19.9 MBytes   167 Mbits/sec                  
[  5]  16.00-17.00  sec  19.8 MBytes   166 Mbits/sec                  
[  5]  17.00-18.00  sec  19.4 MBytes   163 Mbits/sec                  
[  5]  18.00-19.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  19.00-20.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  20.00-21.00  sec  19.0 MBytes   159 Mbits/sec                  
[  5]  21.00-22.00  sec  19.1 MBytes   160 Mbits/sec                  
[  5]  22.00-23.00  sec  18.9 MBytes   159 Mbits/sec                  
[  5]  23.00-24.00  sec  19.0 MBytes   160 Mbits/sec                  
[  5]  24.00-25.00  sec  19.5 MBytes   163 Mbits/sec                  
[  5]  25.00-26.00  sec  19.1 MBytes   160 Mbits/sec                  
[  5]  26.00-27.00  sec  19.5 MBytes   164 Mbits/sec                  
[  5]  27.00-28.00  sec  19.4 MBytes   163 Mbits/sec                  
[  5]  28.00-29.00  sec  20.1 MBytes   169 Mbits/sec                  
[  5]  29.00-30.00  sec  19.7 MBytes   165 Mbits/sec                  
[  5]  30.00-31.00  sec  19.3 MBytes   162 Mbits/sec                  
[  5]  31.00-32.00  sec  19.5 MBytes   163 Mbits/sec                  
[  5]  32.00-33.00  sec  19.6 MBytes   164 Mbits/sec                  
[  5]  33.00-34.00  sec  20.0 MBytes   168 Mbits/sec                  
[  5]  34.00-35.00  sec  20.4 MBytes   171 Mbits/sec                  
[  5]  35.00-36.00  sec  20.0 MBytes   168 Mbits/sec                  
[  5]  36.00-37.00  sec  20.2 MBytes   169 Mbits/sec                  
[  5]  37.00-38.00  sec  20.1 MBytes   168 Mbits/sec                  
[  5]  38.00-39.00  sec  19.9 MBytes   167 Mbits/sec                  
[  5]  39.00-40.00  sec  20.1 MBytes   169 Mbits/sec                  
[  5]  40.00-40.08  sec  1.64 MBytes   166 Mbits/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-40.08  sec   783 MBytes   164 Mbits/sec                  receiver
-----------------------------------------------------------
Server listening on 5201
-----------------------------------------------------------
this is vpn work 

conclusion:
tap 
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-40.00  sec   771 MBytes   162 Mbits/sec  355             sender
[  5]   0.00-40.04  sec   769 MBytes   161 Mbits/sec                  receiver

tun

[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-40.00  sec   784 MBytes   164 Mbits/sec  206             sender
[  5]   0.00-40.08  sec   783 MBytes   164 Mbits/sec                  receiver

differences two metods: i watch speed simmilar and only retry tap > tun
tun > tap  is little more transer MBytes

but it is to diferent metod work for vpn
-TUN devices work at the IP level and they operate with Layer 3 packets (IP packets).
-TUN encapsulate the IP packets inside the VPN protocol
-TUN is used with routing
-TAP devices work at the Ethernet (MAC) level and work Laers 2
-TAP encapsulate the Ethernet frames inside the VPN 
-TAP is used with Ethernet bridging
A lot of piple use TUN metod,TAP - very specific, if he work only two liers
TUN is generally used more because it tends to meet the requirements for most VPN users,  TAP is used for more specific situations where you need to bridge networks at the Ethernet level.
 


