---
 - name: install all hosts
   hosts: vm
   become: true
   tasks:
    - name: install update and program
      apt:
        update_cache: yes
        name:
        - openvpn
        - iperf3
        state: latest
    
    - name: install server
      block:
        - name: generate key openvpn
          shell: openvpn --genkey secret /etc/openvpn/static.key

        - name: copy generate key for local machine
          fetch:
            src: /etc/openvpn/static.key
            dest: "serv_pref/static.key"
            flat: yes

        - name: create conf file openvpn
          file:
            path: /etc/openvpn/server.conf
            state: absent
            owner: root
            group: root

        - name: create template 
          template:
            src: templ_ovpn/server.j2
            dest: /etc/openvpn/server.conf
         
        - name: create file service openvpn
          file:
            path: /etc/systemd/system/openvpn@client.service
            state: absent
            owner: root
            group: root
         
        - name: create template service
          template:
            src: serv_pref/service.j2
            dest: /etc/systemd/system/openvpn@.service
        - name: start service
          service:
            name: openvpn@server.service
            state: started
            enabled: true
      when: (ansible_hostname == "Server")
    
    - name: install config client
      block:
        - name: create file serv.conf for client
          template:
            src: templ_ovpn/client.j2
            dest: /etc/openvpn/server.conf
        - name: create file
          file:
            path: /etc/openvpn/static.key
            state: absent
      when: (ansible_hostname == "Client")

    - name: Copy to Client
      block:
        - name:
          copy:
            src: serv_pref/static.key
            dest:  /etc/openvpn/static.key
            mode: '0600'
          delegate_to: Client
      when: (ansible_hostname == "Server")

        
         


    - name: reboot all hosts
      block:
      - shell: systemctl reboot
        async: 300
        poll: 0
        ignore_errors: true

      - name: wait for system hosts
        wait_for_connection:
        delay: 60
        timeout: 300
...
