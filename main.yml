---
- name: install borgbackup
  become: true
  hosts: all
  tasks:
    - name: install borg
      apt:
        pkg:
          - borgbackup
          - rsync

- name: backup_server
  become: true
  hosts: backup
  tasks:
    - name: create dir
      file:
        path: /var/backup
        state: directory
        mode: '0755'

    - name: Create a ext4 filesystem on /dev/sdb
      filesystem:
        fstype: ext4
        dev: /dev/sdb

    - name: mount disk
      mount:
        path: /var/backup
        src: /dev/sdb
        fstype: ext4
        state: mounted

    - name: create user borg
      user:
        name: borg

    - name: chown mount dir
      file:
        path: /var/backup
        owner: borg
        group: borg
        mode: '0755'

    - name: create dir for home directory borg
      file:
        path:  /home/borg/.ssh
        state: directory

    - name: chown dir ssh
      file:
        path: .ssh
        mode: '775'

    - name: create file authorized
      file:
        path: /home/borg/.ssh/authorized_keys
        state: touch
        owner: borg
        group: borg
        mode: '775'


          #- hosts: backup
          #tasks:
          #- name: Copy SSH public key to /home/borg/.ssh/authorized_keys
          #authorized_key:
          #user: borg
          #key: "{{ hostvars['client'].public_key }}"
          #state: present
          #become: yes

- name: client_vm
  become: true
  hosts: client
  tasks:
    - name: Generate an ssh-keygen
      openssh_keypair:
        path: /root/.ssh/id_rsa
        owner: root
        group: root

    - name: Copy id_rsa to main vm
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: "{{ inventory_hostname }}_id_rsa.pub"
        flat: yes

    - name: Copy from controller to backup
      copy:
        src: "{{ inventory_hostname }}_id_rsa.pub"
        dest: /home/borg/.ssh/authorized_keys
        mode: '0600'
      delegate_to: backup

    - name: copy fingerprint in localmashine
      template:
        src: known_hosts
        dest: ~/.ssh/known_hosts

    - name: copy template service
      template:
        src: borg-backup.service
        dest: /etc/systemd/system/borg-backup.service

    - name: Copy service
      template:
        src: borg-backup.timer
        dest: /etc/systemd/system/borg-backup.timer

    - name: init borg
      command: 'borg init --encryption=none borg@192.168.56.10:/var/backup/Otus'

    - name: service reload backup
      service:
        name: '{{ item }}'
        state: reloaded
      with_items:
        - borg-backup.service
        - borg-backup.timer

    - name: Start borg-backup service
      service:
        name: '{{ item }}'
        state: started
      with_items:
        - borg-backup.service
        - borg-backup.timer

...
